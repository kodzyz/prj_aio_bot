from aiogram.types import (Message, ReplyKeyboardMarkup,
                           CallbackQuery, ReplyKeyboardRemove)
from aiogram.dispatcher import FSMContext
from aiogram.types.chat import ChatActions
import logging

from filters import IsUser
from loader import db, dp, bot
from .menu import cart  # cart = 'üõí –ö–æ—Ä–∑–∏–Ω–∞'
from keyboards.inline.products_from_cart import product_markup
from keyboards.inline.products_from_catalog import product_cb
from states import CheckoutState
from keyboards.default.markups import *


# –†–ï–ê–õ–ò–ó–£–ï–ú –ö–û–†–ó–ò–ù–£

# 4.4 —Ä–µ–∞–ª–∏–∑—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–≤–æ–¥–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–æ—Ä–∑–∏–Ω—ã (—É4-—Å10)
# –õ–∏—Å—Ç–∏–Ω–≥ 4.8. step_4 /handlers/user/cart.py
@dp.message_handler(IsUser(), text=cart)
async def process_cart(message: Message, state: FSMContext):
    cart_data = db.fetchall(
        'SELECT * FROM cart WHERE cid=?', (message.chat.id,))
    # —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ id —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    if len(cart_data) == 0:  # –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞

        await message.answer('–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.')
    else:

        await bot.send_chat_action(message.chat.id, ChatActions.TYPING)
        # –∏–º–∏—Ç–∞—Ü–∏—è –ø–µ—á–∞—Ç–∏ –∂–∏–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞

        async with state.proxy() as data:
            data['products'] = {}
            # –ù–∞–ø–æ–ª–Ω—è–µ–º –≤–ª–æ–∂–µ–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
            # 'products' - –∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏–µ–º –±—É–¥–µ—Ç —Å–ª–æ–≤–∞—Ä—å

        order_cost = 0
        # –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Ä–∞–≤–Ω—è–µ—Ç—Å—è –Ω—É–ª—é

        for _, idx, count_in_cart in cart_data:  # –û–±—Ö–æ–¥–∏–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã
            # _ - id –∫–ª–∏–µ–Ω—Ç–∞ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∫–æ–¥–µ)
            # idx - id —Ç–æ–≤–∞—Ä–∞,
            # count_in_cart - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ

            product = db.fetchone('SELECT * FROM products WHERE idx=?',
                                  (idx,))
            # –ü–æ–ª—É—á–∞–µ–º —Å–∞–º –æ–±—ä–µ–∫—Ç —Ç–æ–≤–∞—Ä–∞ –ø–æ id —Ç–æ–≤–∞—Ä–∞ –≤–∑—è—Ç–æ–≥–æ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã (idx)

            if product == None:

                db.query('DELETE FROM cart WHERE idx=?', (idx,))
                # –í–æ–∑–º–æ–∂–Ω–æ —Ç–æ–≤–∞—Ä–∞ —É–∂–µ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ –Ω–µ—Ç,
                # –∑–Ω–∞—á–∏—Ç –Ω—É–∂–Ω–æ –µ–≥–æ —É–¥–∞–ª–∏—Ç—å –∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã

            else:
                _, title, body, image, price, _ = product
                # –†–∞—Å–∫—Ä–æ–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–±—ä–µ–∫—Ç–∞-—Ç–æ–≤–∞—Ä–∞ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã

                order_cost += price
                # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞

                async with state.proxy() as data:
                    data['products'][idx] = [title, price, count_in_cart]
                    # —Å–ª–æ–≤–∞—Ä—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ 'data' –ø–æ –∫–ª—é—á—É 'products'
                    # –∏ –∑–Ω–∞—á–µ–Ω–∏–µ–º –±—É–¥–µ—Ç —Ç–æ–∂–µ —Å–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–æ–º 'id' —Ç–æ–≤–∞—Ä–∞
                    # –∏ –∑–Ω–∞—á–µ–Ω–∏–µ–º –≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è
                    # –±—É–¥–µ—Ç —Å–ø–∏—Å–æ–∫ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –æ—á–µ—Ä–µ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
                    # –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ü–µ–Ω–∞, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ

                markup = product_markup(idx, count_in_cart)
                # –ë–µ—Ä–µ–º –Ω–∞—à –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è
                # —Ä–∞–∑–º–µ—Ç–∫–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ

                text = f'<b>{title}</b>\n\n{body}\n\n–¶–µ–Ω–∞: {price}‚ÇΩ.'
                # —Ç–æ–≤–∞—Ä, –æ–ø–∏—Å–∞–Ω–∏–µ, —Ü–µ–Ω–∞

                await message.answer_photo(photo=image,
                                           caption=text,
                                           reply_markup=markup)
                # –í—ã–≤–æ–¥–∏–º –æ—Ç–≤–µ—Ç-–∫–∞—Ä—Ç–æ—á–∫—É

        if order_cost != 0:  # –µ—Å–ª–∏ –æ–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–µ –Ω–æ–ª—å
            # (–≤ –∫–æ—Ä–∑–∏–Ω–µ –µ—Å—Ç—å —Ç–æ–≤–∞—Ä—ã)

            markup = ReplyKeyboardMarkup(resize_keyboard=True,
                                         selective=True)
            markup.add('üì¶ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑')

            await message.answer('–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é?',
                                 reply_markup=markup)
            # –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—é –∑–∞–∫–∞–∑–∞
            # –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º, —Å–ª—É—á–∞–µ –µ—Å–ª–∏
            # —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ –Ω–µ —Ä–∞–≤–Ω–∞ –Ω—É–ª—é
            # (–∫–æ—Ä–∑–∏–Ω–∞ –Ω–µ –ø—É—Å—Ç–∞)


# 4.5 —Ä–µ–∞–ª–∏–∑—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É (—É4-—Å13)
# -> handlers/user/catalog.py


# 4.6 —Ä–µ–∞–ª–∏–∑—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–æ—Ä–∑–∏–Ω—ã (—É4-—Å15)
# –õ–∏—Å—Ç–∏–Ω–≥ 4.11. step_3 /handlers/user/cart.py
@dp.callback_query_handler(IsUser(), product_cb.filter(action='count'))  # –æ–∫–Ω–æ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ç–æ–≤–∞—Ä–∞
@dp.callback_query_handler(IsUser(), product_cb.filter(action='increase'))  # —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∏
@dp.callback_query_handler(IsUser(), product_cb.filter(action='decrease'))  # –∏ —É–º–µ–Ω—å—à–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞
async def product_callback_handler(query: CallbackQuery, callback_data:
dict,
                                   state: FSMContext):
    '''action='count', action='increase', action='decrease' :
    –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –ø—Ä–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏–∏
     –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤'''

    idx = callback_data['id']  # id —Ç–æ–≤–∞—Ä–∞ –∏–∑ —Å–ª–æ–≤–∞—Ä—è —Å callback –¥–∞–Ω–Ω—ã–º–∏
    action = callback_data['action']  # –¥–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω—è–µ–º–æ–µ –Ω–∞–º–∏, –ø–æ–ª—É—á–∞–µ–º –ø–æ –∫–ª—é—á—É –∏–∑ —Å–ª–æ–≤–∞—Ä—è
    # –ò–∑ —Å–ª–æ–≤–∞—Ä—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä–∞ –∏ —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è

    if 'count' == action:
        # –ø—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–∏ (–Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏) 'count' —Å–º–æ—Ç—Ä–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ

        async with state.proxy() as data:

            if 'products' not in data.keys():
                await process_cart(query.message, state)
            #  –µ—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞,- –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è process_cart()
            # —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—É—Å—Ç–æ–π –∫–æ—Ä–∑–∏–Ω–µ

            else:
                await query.answer('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ - ' + data['products'][idx][2])
            #  –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ —É–≤–∏–¥–∏–º
            #  –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ count_in_cart = data['products'][idx][2]
            #  ( data['products'][idx] = [title, price, count_in_cart] )

    else:  # action='increase' –∏–ª–∏ action='decrease'

        async with state.proxy() as data:
            if 'products' not in data.keys():
                await process_cart(query.message, state)
                #  –µ—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞,- –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è process_cart()
                # —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—É—Å—Ç–æ–π –∫–æ—Ä–∑–∏–Ω–µ

            else:
                data['products'][idx][2] += 1 if 'increase' == action else -1
                # –ï—Å–ª–∏ –∂–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç, –º—ã –∏–ª–∏ —É–≤–µ–ª–∏—á–∏–º ('increase'),
                # –∏–ª–∏ —É–º–µ–Ω—å—à–∏–º ('decrease') –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞

                count_in_cart = data['products'][idx][2]
                # –æ–±–æ–∑–Ω–∞—á–∞–µ–º –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—Ä–∞—Ä–∞ –≤ –∑–∞–∫–∞–∑–µ

                if count_in_cart == 0:  # —Ç–æ–≤–∞—Ä–∞ –±–æ–ª—å—à–µ –Ω–µ—Ç
                    db.query('''DELETE FROM cart 
                    WHERE cid = ? AND idx = ?''', (query.message.chat.id, idx))
                    # –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ —Ä–∞–≤–Ω–æ –Ω—É–ª—é,
                    # —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å

                    await query.message.delete()

                else:
                    db.query('''UPDATE cart 
                    SET quantity = ?
                    WHERE cid = ? AND idx = ?''',
                             (count_in_cart, query.message.chat.id, idx))

                    await query.message.edit_reply_markup(product_markup(idx, count_in_cart))
                # –ò–Ω–∞—á–µ –º—ã –∏–∑–º–µ–Ω–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                # –∏ —ç—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç—Ä–∞–∑–∏–º –≤ —Ä–∞–∑–º–µ—Ç–∫–µ –∫–æ—Ä–∑–∏–Ω—ã


# –£—Ä–æ–∫ 5. –†–ï–ê–õ–ò–ó–£–ï–ú –†–ê–ë–û–¢–£ —Å –ó–ê–ö–ê–ó–û–ú –ù–ê –°–¢–û–†–û–ù–ï –ö–õ–ò–ï–ù–¢–ê

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –∑–∞–∫–∞–∑–∞ (—É5-—Å3)
# –õ–∏—Å—Ç–∏–Ω–≥ 5.1. /states/checkout_state.py
# –õ–∏—Å—Ç–∏–Ω–≥ 5.2. /states/__init__.py

# –õ–∏—Å—Ç–∏–Ω–≥ 5.3. /handlers/user/cart.py
@dp.message_handler(IsUser(), text='üì¶ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑')
async def process_checkout(message: Message, state: FSMContext):
    '''–∫–Ω–æ–ø–∫–∞ text='–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑'
    —É–∂–µ –µ—Å—Ç—å –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ def process_cart()
    - —Å—Ç—Ä–æ–∫–∞ 85'''

    await CheckoutState.check_cart.set()
    #     from states import CheckoutState
    #     –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–∫–∞–∑–∞

    await checkout(message, state)


#     –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫


# 5.2 —Ä–µ–∞–ª–∏–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∑–∞–∫–∞–∑–∞ (—É5-—Å4)

# –õ–∏—Å—Ç–∏–Ω–≥ 5.4. step_5 /handlers/user/cart.py
# from keyboards.default.markups import * -> —Ä–∞–∑–º–µ—Ç–∫–∞ check_markup()
async def checkout(message, state):
    answer = ''
    total_price = 0
    # –æ–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞

    async with state.proxy() as data:
        for title, price, count_in_cart in data['products'].values():
            # –û–ø–∏—Ä–∞—è—Å—å –Ω–∞ –æ–±—ä–µ–∫—Ç-—Å–æ—Å—Ç–æ—è–Ω–∏–µ
            # –ø–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–ª–æ–≤–∞—Ä—è-–∫–æ–Ω—Ç–µ–∫—Å—Ç–∞

            # —Å—Ç—Ä–æ–∫–∞ 62 -> data['products'][idx] = [title, price, count_in_cart]

            # –ò–∑ —Å–ª–æ–≤–∞—Ä—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:
            # –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞
            # –≤ –∫–æ—Ä–∑–∏–Ω–µ

            tp = count_in_cart * price
            # –í—ã—á–∏—Å–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ

            answer += f'<b>{title}</b> * {count_in_cart}—à—Ç. = {tp}‚ÇΩ\n'
            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

            total_price += tp
            # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞

    await message.answer(f'{answer}\n–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {total_price}‚ÇΩ.',
                         reply_markup=check_markup())


#     –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é


# –õ–∏—Å—Ç–∏–Ω–≥ 5.5. step_5 /handlers/user/cart.py
# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –µ—Å–ª–∏ –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º –±–æ—Ç—É –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@dp.message_handler(IsUser(), lambda message: message.text not in [all_right_message,
                                                                   back_message],
                    state=CheckoutState.check_cart)
async def process_check_cart_invalid(message: Message):
    ''':message.text not in: –µ—Å–ª–∏ –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ
    —á—Ç–æ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏
    :state=: –∑–∞–ø—É—Å–∫ –æ–±—Ä–∞–±-—á–∏–∫–∞
    –ø—Ä–∏ –≤–∫–ª —Å–æ—Å—Ç–æ—è–Ω–∏–∏ "–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã" '''

    await message.reply('–¢–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ.')


# 5.3 —Ä–µ–∞–ª–∏–∑—É–µ–º –æ–±—Ä–∞–±-–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Ñ–æ—Ä–º-—é –∑–∞–∫–∞–∑–∞ –ø–æ—Å–ª–µ –æ—Ç–æ–±—Ä–∞–∂-—è –∑–∞–∫–∞–∑
# (—É5-—Å6)

# –õ–∏—Å—Ç–∏–Ω–≥ 5.6. step_5 /handlers/user/cart.py
@dp.message_handler(IsUser(), text=back_message,
                    state=CheckoutState.check_cart)
async def process_check_cart_back(message: Message,
                                  state: FSMContext):
    '''
    :text=: –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–ù–∞–∑–∞–¥'
    :state=: –∑–∞–ø—É—Å–∫ –æ–±—Ä–∞–±-—á–∏–∫–∞
    –ø—Ä–∏ –≤–∫–ª —Å–æ—Å—Ç–æ—è–Ω–∏–∏ "–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã" '''

    await state.finish()  # –≤—ã–∫–ª —Å–æ—Å—Ç–æ—è–Ω–∏—è "–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã"
    await process_cart(message, state)
    # –ø–µ—Ä–µ—Ö–æ–¥ –∫ –æ–±—Ä–∞–±-—á–∏–∫—É –≤—ã–≤–æ–¥–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–æ—Ä–∑–∏–Ω—ã


# 5.4 —Ä–µ–∞–ª–∏–∑—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –≤–≤–æ–¥—É –∏–º–µ–Ω–∏ –∑–∞–∫–∞–∑—á–∏–∫–∞
# (—É5-—Å7)
# –õ–∏—Å—Ç–∏–Ω–≥ 5.7. /handlers/user/cart.py
@dp.message_handler(IsUser(), text=all_right_message,
                    state=CheckoutState.check_cart)
async def process_check_cart_all_right(message: Message,
                                       state: FSMContext):
    '''
        :text=: –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–í—Å–µ –≤–µ—Ä–Ω–æ'
        :state=: –∑–∞–ø—É—Å–∫ –æ–±—Ä–∞–±-—á–∏–∫–∞
        –ø—Ä–∏ –≤–∫–ª —Å–æ—Å—Ç–æ—è–Ω–∏–∏ "–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã" '''

    await CheckoutState.next()  # name = State()
    # –ø–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—é –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –∑–∞–∫–∞–∑—á–∏–∫–∞

    await message.answer('–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–µ –∏–º—è.',
                         reply_markup=back_markup())
    # –∑–∞–ø—Ä–æ—Å –∏–º–µ–Ω–∏
    # —Ä–∞–∑–º–µ—Ç–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤–≤–æ–¥—É –Ω–∞–∑–≤–∞–Ω–∏—è


# 5.5 —Ä–µ–∞–ª–∏–∑—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫
# —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—é –∑–∞–∫–∞–∑–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –≤–≤–æ–¥—É –∏–º–µ–Ω–∏
# (—É5-—Å8)
# –õ–∏—Å—Ç–∏–Ω–≥ 5.8. step_5 /handlers/user/cart.py
@dp.message_handler(IsUser(), text=back_message, state=CheckoutState.name)
async def process_name_back(message: Message, state: FSMContext):
    '''
        :text=: –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–ù–∞–∑–∞–¥'
        :state=: –∑–∞–ø—É—Å–∫ –æ–±—Ä–∞–±-—á–∏–∫–∞
        –ø—Ä–∏ –≤–∫–ª —Å–æ—Å—Ç–æ—è–Ω–∏–∏ "–≤–≤–æ–¥ –∏–º–µ–Ω–∏" '''

    await CheckoutState.check_cart.set()
    # –≤–∫–ª —Å–æ—Å—Ç–æ—è–Ω–∏—è "–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã"

    await checkout(message, state)


#     —Ñ-—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∑–∞–∫–∞–∑–∞


# 5.6 —Ä–µ–∞–ª–∏–∑—É–µ–º –æ–±—Ä–∞–±-–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∞–¥—Ä–µ—Å—É
# (—É5-—Å8)
# –õ–∏—Å—Ç–∏–Ω–≥ 5.9. /handlers/user/cart.py
@dp.message_handler(IsUser(), state=CheckoutState.name)
async def process_name(message: Message, state: FSMContext):
    ''' :state=: –∑–∞–ø—É—Å–∫ –æ–±—Ä–∞–±-—á–∏–∫–∞
         –ø—Ä–∏ –≤–∫–ª —Å–æ—Å—Ç–æ—è–Ω–∏–∏ "–≤–≤–æ–¥ –∏–º–µ–Ω–∏"
         –∫–æ–≥–¥–∞ –≤–≤–æ–¥–∏–º –∏–º—è'''

    async with state.proxy() as data:
        data['name'] = message.text
        # –≤ —Å–ª–æ–≤–∞—Ä—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–æ–±–∞–≤–ª—è–µ–º –∏–º—è –∑–∞–∫–∞–∑—á–∏–∫–∞ –ø–æ –∫–ª—é—á—É 'name'

        if 'address' in data.keys():

            await confirm(message)
            await CheckoutState.confirm.state()  # confirm = State()
            # –ï—Å–ª–∏ –∞–¥—Ä–µ—Å —É–∂–µ —É–∫–∞–∑–∞–Ω,
            # –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
            # —Ñ-—è confirm
            # –∏ –≤–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (confirm)

        else:
            await CheckoutState.next()  # address = State()
            await message.answer('–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –∞–¥—Ä–µ—Å –º–µ—Å—Ç–∞ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞.',
                                 reply_markup=back_markup())
            # –ï—Å–ª–∏ –∞–¥—Ä–µ—Å –µ—â–µ –Ω–µ —É–∫–∞–∑–∞–Ω,
            # –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –µ–≥–æ —É–∫–∞–∑–∞—Ç—å
            # –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ address


# 5.7 —Ä–µ–∞–ª–∏–∑—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤–≤–æ–¥—É –∏–º–µ–Ω–∏
# (—É5-—Å9)
# –õ–∏—Å—Ç–∏–Ω–≥ 5.10. step_5 /handlers/user/cart.py
@dp.message_handler(IsUser(), text=back_message,
                    state=CheckoutState.address)
async def process_address_back(message: Message, state: FSMContext):
    '''
        :text=: –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–ù–∞–∑–∞–¥'
        :state=: –∑–∞–ø—É—Å–∫ –æ–±—Ä–∞–±-—á–∏–∫–∞
        –ø—Ä–∏ –≤–∫–ª —Å–æ—Å—Ç–æ—è–Ω–∏–∏ "–≤–≤–æ–¥ –∞–¥—Ä–µ—Å—Å–∞" '''
    async with state.proxy() as data:
        await message.answer('–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è —Å <b>' + data['name'] + '</b>?', reply_markup=back_markup())
        # –±–µ—Ä–µ–º –∏–º—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ
        # data['name'] = message.text (—Å—Ç—Ä–æ–∫–∞ 306)

    await CheckoutState.name.set()  # –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏


# 5.8 —Ä–µ–∞–ª–∏–∑—É–µ–º –æ–±—Ä–∞–±-–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–≤–æ–¥–∞ –∞–¥—Ä–µ—Å–∞ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
# (—É5-—Å9)
# –õ–∏—Å—Ç–∏–Ω–≥ 5.11. step_5 /handlers/user/cart.py
@dp.message_handler(IsUser(), state=CheckoutState.address)
async def process_address(message: Message, state: FSMContext):
    ''' :state=: –∑–∞–ø—É—Å–∫ –æ–±—Ä–∞–±-—á–∏–∫–∞
             –ø—Ä–∏ –≤–∫–ª —Å–æ—Å—Ç–æ—è–Ω–∏–∏ "–≤–≤–æ–¥ –∞–¥—Ä–µ—Å–∞"
             –∫–æ–≥–¥–∞ –≤–≤–æ–¥–∏–º –∞–¥—Ä–µ—Å'''

    async with state.proxy() as data:
        data['address'] = message.text
        # –≤ —Å–ª–æ–≤–∞—Ä—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–æ–±–∞–≤–ª—è–µ–º –∞–¥—Ä–µ—Å –∑–∞–∫–∞–∑—á–∏–∫–∞ –ø–æ –∫–ª—é—á—É 'address'

    await confirm(message)
    await CheckoutState.next()
    # –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
    # —Ñ-—è confirm
    # –∏ –≤–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (confirm)


# –õ–∏—Å—Ç–∏–Ω–≥ 5.12. step_5 /handlers/user/cart.py
# (—É5-—Å10)
# —Ñ-—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
async def confirm(message):
    await message.answer('–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–∫–∞–∑.',
                         reply_markup=confirm_markup())
    # confirm_markup() - —Ñ-—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–º–µ—Ç–∫–∏
    # –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞


# —Ñ-—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–º–µ—Ç–∫–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
# confirm_markup()
# (—É5-—Å10)
# –õ–∏—Å—Ç–∏–Ω–≥ 13. /keyboards/default/markups.py


# 5.9 –æ–±—Ä–∞–±-–∫ —Å–∏—Ç—É–∞—Ü–∏–∏, –∫–æ–≥–¥–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ –º—ã –≤–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç
# (—É5-—Å10)
# –õ–∏—Å—Ç–∏–Ω–≥ 5.14. /handlers/user/cart.py
@dp.message_handler(IsUser(),
                    lambda message: message.text not in [confirm_message,
                                                         back_message],
                    state=CheckoutState.confirm)
async def process_confirm_invalid(message: Message):
    ''':message.text not in: –µ—Å–ª–∏ –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ
        —á—Ç–æ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏
        :state=: –∑–∞–ø—É—Å–∫ –æ–±—Ä–∞–±-—á–∏–∫–∞
        –ø—Ä–∏ –≤–∫–ª —Å–æ—Å—Ç–æ—è–Ω–∏–∏ "–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞" '''

    await message.reply('–¢–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ.')


# 5.10 –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—é –∞–¥—Ä–µ—Å–∞
# (—É5-—Å11)
# –õ–∏—Å—Ç–∏–Ω–≥ 5.15. /handlers/user/cart.py
@dp.message_handler(IsUser(), text=back_message,
                    state=CheckoutState.confirm)
async def process_confirm(message: Message, state: FSMContext):
    '''
        :text=: –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–ù–∞–∑–∞–¥'
        :state=: –∑–∞–ø—É—Å–∫ –æ–±—Ä–∞–±-—á–∏–∫–∞
        –ø—Ä–∏ –≤–∫–ª —Å–æ—Å—Ç–æ—è–Ω–∏–∏ "–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞" '''

    await CheckoutState.address.set()
    # –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–≤–æ–¥–∞ –∞–¥—Ä–µ—Å–∞

    async with state.proxy() as data:
        await message.answer('–ò–∑–º–µ–Ω–∏—Ç—å –∞–¥—Ä–µ—Å —Å <b>' + data['address'] +
                             '</b>?',
                             reply_markup=back_markup())
        # # –±–µ—Ä–µ–º –∞–¥—Ä–µ—Å –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—Ç—å —Å —Ç–µ–∫—É—â–µ–≥–æ
        # –õ–∏—Å—Ç–∏–Ω–≥ 11. /handlers/user/cart.py -> data['address'] = message.text
        # /keyboards/default/markups.py -> back_markup()


# 5.11 —Ä–µ–∞–ª–∏–∑—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
# (—É5-—Å12)
# –õ–∏—Å—Ç–∏–Ω–≥ 5.16. /handlers/user/cart.py
@dp.message_handler(IsUser(), text=confirm_message,
                    state=CheckoutState.confirm)
async def process_confirm(message: Message, state: FSMContext):

    markup = ReplyKeyboardRemove()
    # –±–µ–∑ —Ä–∞–∑–º–µ—Ç–∫–∏

    logging.info('Deal was made.')

    async with state.proxy() as data:
        cid = message.chat.id
        # id —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–∞–±–æ—Ç–∞—é—â–µ–≥–æ –≤ –±–æ—Ç–µ

        # –º–∞—Å—Å–∏–≤ –∏–∑ —Å—Ç—Ä–æ–∫
        products = [idx + '=' + str(quantity)
                    for idx, quantity in db.fetchall('''SELECT idx, 
                    quantity FROM cart WHERE cid=?''', (cid,))]
        # –∑–∞–ø—Ä–æ—Å –∫ —Ç–∞–±–ª–∏—Ü–µ —Å –∫–æ—Ä–∑–∏–Ω–æ–π —Ç–æ–≤–∞—Ä–æ–≤,
        # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ —Ç–æ–≤–∞—Ä–æ–≤,
        # –≥–¥–µ –∫–∞–∂–¥—ã–π —Ç–æ–≤–∞—Ä –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω —Å—Ç—Ä–æ–∫–æ–π
        # —Ñ–æ—Ä–º–∞—Ç–∞: 'a9cef291062dba543eb97fe5887928f0=1'
        # –°–ø—Ä–∞–≤–∞ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä–∞, –∞ —Å–ª–µ–≤–∞ ‚Äì –µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ

        # –î–∞–ª–µ–µ —ç—Ç–∏ —Å—Ç—Ä–æ–∫–∏ –≤ –º–∞—Å—Å–∏–≤–µ –º—ã –±—É–¥–µ–º —Å—Ü–µ–ø–ª—è—Ç—å,
        # —Ç–µ–º —Å–∞–º—ã–º —Ñ–æ—Ä–º–∏—Ä—É—è –æ–±—â–∏–π –Ω–∞–±–æ—Ä —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ

        db.query('INSERT INTO orders VALUES (?, ? ,? ,?)',
                 (cid, data['name'], data['address'], ' '.join(products)))
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Ç–∞–±–ª–∏—Ü—É —Å –∑–∞–∫–∞–∑–∞–º–∏ –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
        # —Å –Ω–∞–±–æ—Ä–æ–º –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        db.query('DELETE FROM cart WHERE cid=?', (cid,))
        # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã

        await message.answer('Ok! –í–∞—à –∑–∞–∫–∞–∑ —É–∂–µ –≤ –ø—É—Ç–∏ üöÄ\n–ò–º—è: <b>' + data[
            'name'] + '</b>\n–ê–¥—Ä–µ—Å: <b>' + data['address'] + '</b> ', reply_markup=markup)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

        await state.finish()  # –≤—ã–∫–ª —Å–æ—Å—Ç–æ—è–Ω–∏—è


# 5.12 —Ä–µ–∞–ª–∏–∑—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
# (—É5-—Å13)
# –õ–∏—Å—Ç–∏–Ω–≥ 17. /handlers/user/delivery_status.py


